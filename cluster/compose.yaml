name: web-cluster

networks:
  internal:
    driver: bridge

    ipam:
      config:
        - subnet: 192.168.2.0/24
          gateway: 192.168.2.1

services:
  api-1:
    image: node:22
    hostname: api-1
    working_dir: /application/
    volumes:
      - type: bind
        source: ./
        target: /application/
    networks:
      internal:
        ipv4_address: 192.168.2.2
    command: ["npm", "run", "server"]
    environment:
      HOST: 192.168.2.2
      DATABASE_URL: http://192.168.2.6:3000

  api-2:
    image: node:22
    hostname: api-2
    working_dir: /application/
    volumes:
      - type: bind
        source: ./
        target: /application/
    networks:
      internal:
        ipv4_address: 192.168.2.3
    command: ["npm", "run", "server"]
    environment:
      HOST: 192.168.2.3
      DATABASE_URL: http://192.168.2.6:3000

  api-3:
    image: node:22
    hostname: api-3
    working_dir: /application/
    volumes:
      - type: bind
        source: ./
        target: /application/
    networks:
      internal:
        ipv4_address: 192.168.2.4
    command: ["npm", "run", "server"]
    environment:
      HOST: 192.168.2.4
      DATABASE_URL: http://192.168.2.6:3000

  load-balancer:
    image: node:22
    working_dir: /application/
    volumes:
      - type: bind
        source: ./
        target: /application/
    networks:
      internal:
        ipv4_address: 192.168.2.5
    command: ["npm", "run", "load-balancer"]
    environment:
      SERVERS: "192.168.2.2:3000,192.168.2.3:3000,192.168.2.4:3000"
      DATABASE_URL: http://192.168.2.6:3000
    ports:
      - "3000:3000"

  database:
    image: node:22
    working_dir: /application/
    volumes:
      - type: bind
        source: ./
        target: /application/
    networks:
      internal:
        ipv4_address: 192.168.2.6
    command:
      [
        "npx",
        "json-server",
        "./public/db.json",
        "--host",
        "192.168.2.6",
        "--port",
        "3000",
      ]
